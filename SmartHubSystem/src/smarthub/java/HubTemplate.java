/** Generated by YAKINDU Statechart Tools code generator. */
package smarthub.java;

import com.yakindu.core.IStatemachine;
import com.yakindu.core.ITimed;
import com.yakindu.core.ITimerService;
import com.yakindu.core.rx.Observable;
import java.util.concurrent.BlockingQueue;
import java.util.concurrent.LinkedBlockingQueue;
import smarthub.java.Hub_Power_Manager;

public class HubTemplate implements IStatemachine, ITimed {
	public static class HUB {
		private HubTemplate parent;
		
		public HUB(HubTemplate parent) {
			this.parent = parent;
		}
		private boolean turnONSystems;
		
		
		public void raiseTurnONSystems() {
			synchronized(parent) {
				parent.inEventQueue.add(() -> {
					turnONSystems = true;
				});
				parent.runCycle();
			}
		}
		
		private boolean turnOFFSystems;
		
		
		public void raiseTurnOFFSystems() {
			synchronized(parent) {
				parent.inEventQueue.add(() -> {
					turnOFFSystems = true;
				});
				parent.runCycle();
			}
		}
		
		private boolean allSystemsOFF;
		
		
		protected void raiseAllSystemsOFF() {
			synchronized(parent) {
				allSystemsOFF = true;
				allSystemsOFFObservable.next(null);
			}
		}
		
		private Observable<Void> allSystemsOFFObservable = new Observable<Void>();
		
		public Observable<Void> getAllSystemsOFF() {
			return allSystemsOFFObservable;
		}
		
		private boolean allSystemsON;
		
		
		protected void raiseAllSystemsON() {
			synchronized(parent) {
				allSystemsON = true;
				allSystemsONObservable.next(null);
			}
		}
		
		private Observable<Void> allSystemsONObservable = new Observable<Void>();
		
		public Observable<Void> getAllSystemsON() {
			return allSystemsONObservable;
		}
		
	}
	
	public static class Power {
		private HubTemplate parent;
		
		public Power(HubTemplate parent) {
			this.parent = parent;
		}
		private long total;
		
		public synchronized long getTotal() {
			synchronized(parent) {
				return total;
			}
		}
		
		public void setTotal(long value) {
			synchronized(parent) {
				this.total = value;
			}
		}
		
		private long threshold;
		
		public synchronized long getThreshold() {
			synchronized(parent) {
				return threshold;
			}
		}
		
		public void setThreshold(long value) {
			synchronized(parent) {
				this.threshold = value;
			}
		}
		
	}
	
	public static class System1 {
		private HubTemplate parent;
		
		public System1(HubTemplate parent) {
			this.parent = parent;
		}
		private boolean toggle;
		
		
		public void raiseToggle() {
			synchronized(parent) {
				parent.inEventQueue.add(() -> {
					toggle = true;
				});
				parent.runCycle();
			}
		}
		
		private boolean isON;
		
		
		protected void raiseIsON() {
			synchronized(parent) {
				isON = true;
				isONObservable.next(null);
			}
		}
		
		private Observable<Void> isONObservable = new Observable<Void>();
		
		public Observable<Void> getIsON() {
			return isONObservable;
		}
		
		private boolean isOFF;
		
		
		protected void raiseIsOFF() {
			synchronized(parent) {
				isOFF = true;
				isOFFObservable.next(null);
			}
		}
		
		private Observable<Void> isOFFObservable = new Observable<Void>();
		
		public Observable<Void> getIsOFF() {
			return isOFFObservable;
		}
		
	}
	
	public static class System2 {
		private HubTemplate parent;
		
		public System2(HubTemplate parent) {
			this.parent = parent;
		}
		private boolean toggle;
		
		
		public void raiseToggle() {
			synchronized(parent) {
				parent.inEventQueue.add(() -> {
					toggle = true;
				});
				parent.runCycle();
			}
		}
		
		private boolean isON;
		
		
		protected void raiseIsON() {
			synchronized(parent) {
				isON = true;
				isONObservable.next(null);
			}
		}
		
		private Observable<Void> isONObservable = new Observable<Void>();
		
		public Observable<Void> getIsON() {
			return isONObservable;
		}
		
		private boolean isOFF;
		
		
		protected void raiseIsOFF() {
			synchronized(parent) {
				isOFF = true;
				isOFFObservable.next(null);
			}
		}
		
		private Observable<Void> isOFFObservable = new Observable<Void>();
		
		public Observable<Void> getIsOFF() {
			return isOFFObservable;
		}
		
	}
	
	protected HUB hUB;
	
	protected Power power;
	
	protected System1 system1;
	
	protected System2 system2;
	
	public enum State {
		MAIN_REGION_HUBOFF,
		MAIN_REGION_SMARTHUB,
		MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS,
		MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_ALLSYSTEMSOFF,
		MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS,
		MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM1_SYSTEM1ON,
		MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM1_SYSTEM1OFF,
		MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2ON,
		MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2OFF,
		MAIN_REGION_SMARTHUB_POWERCONSUMPTIONREGION_POWERCALCULATOR,
		MAIN_REGION_SMARTHUB_SYSTEM1REGION_SYSTEM1_STATUS,
		MAIN_REGION_SMARTHUB_SYSTEM2REGION_SYSTEM2_STATUS,
		$NULLSTATE$
	};
	
	private final State[] stateVector = new State[5];
	
	private ITimerService timerService;
	
	private final boolean[] timeEvents = new boolean[1];
	
	private BlockingQueue<Runnable> inEventQueue = new LinkedBlockingQueue<Runnable>();
	private boolean isExecuting;
	
	protected boolean getIsExecuting() {
		synchronized(HubTemplate.this) {
			return isExecuting;
		}
	}
	
	protected void setIsExecuting(boolean value) {
		synchronized(HubTemplate.this) {
			this.isExecuting = value;
		}
	}
	private long stateConfVectorPosition;
	
	protected long getStateConfVectorPosition() {
		synchronized(HubTemplate.this) {
			return stateConfVectorPosition;
		}
	}
	
	protected void setStateConfVectorPosition(long value) {
		synchronized(HubTemplate.this) {
			this.stateConfVectorPosition = value;
		}
	}
	public HubTemplate() {
		hUB = new HUB(this);
		power = new Power(this);
		system1 = new System1(this);
		system2 = new System2(this);
		for (int i = 0; i < 5; i++) {
			stateVector[i] = State.$NULLSTATE$;
		}
		
		clearInEvents();
		
		setPowerManager(null);
		
		setTotalSystemsON(0l);
		
		power.setTotal(0l);
		
		power.setThreshold(15l);
		
		isExecuting = false;
	}
	
	public synchronized void enter() {
		if (timerService == null) {
			throw new IllegalStateException("Timer service must be set.");
		}
		
		
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		
		enterSequence_main_region_default();
		isExecuting = false;
	}
	
	public synchronized void exit() {
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		
		exitSequence_main_region();
		isExecuting = false;
	}
	
	/**
	 * @see IStatemachine#isActive()
	 */
	public synchronized boolean isActive() {
		return stateVector[0] != State.$NULLSTATE$||stateVector[1] != State.$NULLSTATE$||stateVector[2] != State.$NULLSTATE$||stateVector[3] != State.$NULLSTATE$||stateVector[4] != State.$NULLSTATE$;
	}
	
	/** 
	* Always returns 'false' since this state machine can never become final.
	*
	* @see IStatemachine#isFinal()
	*/
	public synchronized boolean isFinal() {
		return false;
	}
	private void clearInEvents() {
		toggle = false;
		hUB.turnONSystems = false;
		hUB.turnOFFSystems = false;
		system1.toggle = false;
		system2.toggle = false;
		timeEvents[0] = false;
	}
	
	private void microStep() {
		long transitioned = -1l;
		
		stateConfVectorPosition = 0l;
		
		switch (stateVector[0]) {
		case MAIN_REGION_HUBOFF:
			transitioned = main_region_HubOff_react(transitioned);
			break;
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_ALLSYSTEMSOFF:
			transitioned = main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_AllSystemsOFF_react(transitioned);
			break;
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM1_SYSTEM1ON:
			transitioned = main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1ON_react(transitioned);
			break;
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM1_SYSTEM1OFF:
			transitioned = main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1OFF_react(transitioned);
			break;
		default:
			break;
		}
		
		if (getStateConfVectorPosition()<1l) {
			switch (stateVector[1]) {
			case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2ON:
				transitioned = main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2ON_react(transitioned);
				break;
			case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2OFF:
				transitioned = main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2OFF_react(transitioned);
				break;
			default:
				break;
			}
		}
		if (getStateConfVectorPosition()<2l) {
			switch (stateVector[2]) {
			case MAIN_REGION_SMARTHUB_POWERCONSUMPTIONREGION_POWERCALCULATOR:
				transitioned = main_region_SmartHub_PowerConsumptionRegion_PowerCalculator_react(transitioned);
				break;
			default:
				break;
			}
		}
		if (getStateConfVectorPosition()<3l) {
			switch (stateVector[3]) {
			case MAIN_REGION_SMARTHUB_SYSTEM1REGION_SYSTEM1_STATUS:
				transitioned = main_region_SmartHub_System1Region_System1_status_react(transitioned);
				break;
			default:
				break;
			}
		}
		if (getStateConfVectorPosition()<4l) {
			switch (stateVector[4]) {
			case MAIN_REGION_SMARTHUB_SYSTEM2REGION_SYSTEM2_STATUS:
				main_region_SmartHub_System2Region_System2_status_react(transitioned);
				break;
			default:
				break;
			}
		}
	}
	
	private void runCycle() {
		if (timerService == null) {
			throw new IllegalStateException("Timer service must be set.");
		}
		
		
		if (getIsExecuting()) {
			return;
		}
		isExecuting = true;
		
		nextEvent();
		do { 
			microStep();
			
			clearInEvents();
			
			nextEvent();
		} while ((((((toggle || hUB.turnONSystems) || hUB.turnOFFSystems) || system1.toggle) || system2.toggle) || timeEvents[0]));
		
		isExecuting = false;
	}
	
	protected void nextEvent() {
		if(!inEventQueue.isEmpty()) {
			inEventQueue.poll().run();
			return;
		}
	}
	/**
	* Returns true if the given state is currently active otherwise false.
	*/
	public synchronized boolean isStateActive(State state) {
	
		switch (state) {
		case MAIN_REGION_HUBOFF:
			return stateVector[0] == State.MAIN_REGION_HUBOFF;
		case MAIN_REGION_SMARTHUB:
			return stateVector[0].ordinal() >= State.
					MAIN_REGION_SMARTHUB.ordinal()&& stateVector[0].ordinal() <= State.MAIN_REGION_SMARTHUB_SYSTEM2REGION_SYSTEM2_STATUS.ordinal();
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS:
			return stateVector[0].ordinal() >= State.
					MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS.ordinal()&& stateVector[0].ordinal() <= State.MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2OFF.ordinal();
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_ALLSYSTEMSOFF:
			return stateVector[0] == State.MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_ALLSYSTEMSOFF;
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS:
			return stateVector[0].ordinal() >= State.
					MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS.ordinal()&& stateVector[0].ordinal() <= State.MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2OFF.ordinal();
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM1_SYSTEM1ON:
			return stateVector[0] == State.MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM1_SYSTEM1ON;
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM1_SYSTEM1OFF:
			return stateVector[0] == State.MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM1_SYSTEM1OFF;
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2ON:
			return stateVector[1] == State.MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2ON;
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2OFF:
			return stateVector[1] == State.MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2OFF;
		case MAIN_REGION_SMARTHUB_POWERCONSUMPTIONREGION_POWERCALCULATOR:
			return stateVector[2] == State.MAIN_REGION_SMARTHUB_POWERCONSUMPTIONREGION_POWERCALCULATOR;
		case MAIN_REGION_SMARTHUB_SYSTEM1REGION_SYSTEM1_STATUS:
			return stateVector[3] == State.MAIN_REGION_SMARTHUB_SYSTEM1REGION_SYSTEM1_STATUS;
		case MAIN_REGION_SMARTHUB_SYSTEM2REGION_SYSTEM2_STATUS:
			return stateVector[4] == State.MAIN_REGION_SMARTHUB_SYSTEM2REGION_SYSTEM2_STATUS;
		default:
			return false;
		}
	}
	
	public synchronized void setTimerService(ITimerService timerService) {
		this.timerService = timerService;
	}
	
	public ITimerService getTimerService() {
		return timerService;
	}
	
	public synchronized void raiseTimeEvent(int eventID) {
		inEventQueue.add(() -> {
			timeEvents[eventID] = true;
		});
		runCycle();
	}
	
	public HUB hUB() {
		return hUB;
	}
	
	public Power power() {
		return power;
	}
	
	public System1 system1() {
		return system1;
	}
	
	public System2 system2() {
		return system2;
	}
	
	
	private boolean toggle;
	
	
	public void raiseToggle() {
		synchronized(HubTemplate.this) {
			inEventQueue.add(() -> {
				toggle = true;
			});
			runCycle();
		}
	}
	
	private boolean hubON;
	
	
	protected void raiseHubON() {
		synchronized(HubTemplate.this) {
			hubON = true;
			hubONObservable.next(null);
		}
	}
	
	private Observable<Void> hubONObservable = new Observable<Void>();
	
	public Observable<Void> getHubON() {
		return hubONObservable;
	}
	
	private boolean hubOFF;
	
	
	protected void raiseHubOFF() {
		synchronized(HubTemplate.this) {
			hubOFF = true;
			hubOFFObservable.next(null);
		}
	}
	
	private Observable<Void> hubOFFObservable = new Observable<Void>();
	
	public Observable<Void> getHubOFF() {
		return hubOFFObservable;
	}
	
	private Hub_Power_Manager powerManager;
	
	public synchronized Hub_Power_Manager getPowerManager() {
		synchronized(HubTemplate.this) {
			return powerManager;
		}
	}
	
	public void setPowerManager(Hub_Power_Manager value) {
		synchronized(HubTemplate.this) {
			this.powerManager = value;
		}
	}
	
	private long totalSystemsON;
	
	public synchronized long getTotalSystemsON() {
		synchronized(HubTemplate.this) {
			return totalSystemsON;
		}
	}
	
	public void setTotalSystemsON(long value) {
		synchronized(HubTemplate.this) {
			this.totalSystemsON = value;
		}
	}
	
	/* Entry action for state 'HubOff'. */
	private void entryAction_main_region_HubOff() {
		raiseHubOFF();
	}
	
	/* Entry action for state 'SmartHub'. */
	private void entryAction_main_region_SmartHub() {
		raiseHubON();
	}
	
	/* Entry action for state 'SmartHubSystemStatus'. */
	private void entryAction_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus() {
		hUB.raiseAllSystemsOFF();
	}
	
	/* Entry action for state 'AllSystemsOFF'. */
	private void entryAction_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_AllSystemsOFF() {
		hUB.raiseAllSystemsOFF();
	}
	
	/* Entry action for state 'System1ON'. */
	private void entryAction_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1ON() {
		system1.raiseIsON();
	}
	
	/* Entry action for state 'System1OFF'. */
	private void entryAction_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1OFF() {
		system1.raiseIsOFF();
	}
	
	/* Entry action for state 'System2ON'. */
	private void entryAction_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2ON() {
		system2.raiseIsON();
	}
	
	/* Entry action for state 'System2OFF'. */
	private void entryAction_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2OFF() {
		system2.raiseIsOFF();
	}
	
	/* Entry action for state 'PowerCalculator'. */
	private void entryAction_main_region_SmartHub_PowerConsumptionRegion_PowerCalculator() {
		timerService.setTimer(this, 0, (1l * 1000l), false);
		
		powerManager.setThreshold(power.threshold);
		
		powerManager.setTotal(power.total);
	}
	
	/* Exit action for state 'PowerCalculator'. */
	private void exitAction_main_region_SmartHub_PowerConsumptionRegion_PowerCalculator() {
		timerService.unsetTimer(this, 0);
	}
	
	/* 'default' enter sequence for state HubOff */
	private void enterSequence_main_region_HubOff_default() {
		entryAction_main_region_HubOff();
		stateVector[0] = State.MAIN_REGION_HUBOFF;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state SmartHub */
	private void enterSequence_main_region_SmartHub_default() {
		entryAction_main_region_SmartHub();
		enterSequence_main_region_SmartHub_SmartHubRegion_default();
		enterSequence_main_region_SmartHub_PowerConsumptionRegion_default();
		enterSequence_main_region_SmartHub_System1Region_default();
		enterSequence_main_region_SmartHub_System2Region_default();
	}
	
	/* 'default' enter sequence for state SmartHubSystemStatus */
	private void enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_default() {
		entryAction_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus();
		enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_default();
	}
	
	/* 'default' enter sequence for state AllSystemsOFF */
	private void enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_AllSystemsOFF_default() {
		entryAction_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_AllSystemsOFF();
		stateVector[0] = State.MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_ALLSYSTEMSOFF;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state BootUpAllSystems */
	private void enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_default() {
		enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_default();
		enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_default();
	}
	
	/* 'default' enter sequence for state System1ON */
	private void enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1ON_default() {
		entryAction_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1ON();
		stateVector[0] = State.MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM1_SYSTEM1ON;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state System1OFF */
	private void enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1OFF_default() {
		entryAction_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1OFF();
		stateVector[0] = State.MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM1_SYSTEM1OFF;
		stateConfVectorPosition = 0;
	}
	
	/* 'default' enter sequence for state System2ON */
	private void enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2ON_default() {
		entryAction_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2ON();
		stateVector[1] = State.MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2ON;
		stateConfVectorPosition = 1;
	}
	
	/* 'default' enter sequence for state System2OFF */
	private void enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2OFF_default() {
		entryAction_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2OFF();
		stateVector[1] = State.MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2OFF;
		stateConfVectorPosition = 1;
	}
	
	/* 'default' enter sequence for state PowerCalculator */
	private void enterSequence_main_region_SmartHub_PowerConsumptionRegion_PowerCalculator_default() {
		entryAction_main_region_SmartHub_PowerConsumptionRegion_PowerCalculator();
		stateVector[2] = State.MAIN_REGION_SMARTHUB_POWERCONSUMPTIONREGION_POWERCALCULATOR;
		stateConfVectorPosition = 2;
	}
	
	/* 'default' enter sequence for state System1_status */
	private void enterSequence_main_region_SmartHub_System1Region_System1_status_default() {
		stateVector[3] = State.MAIN_REGION_SMARTHUB_SYSTEM1REGION_SYSTEM1_STATUS;
		stateConfVectorPosition = 3;
	}
	
	/* 'default' enter sequence for state System2_status */
	private void enterSequence_main_region_SmartHub_System2Region_System2_status_default() {
		stateVector[4] = State.MAIN_REGION_SMARTHUB_SYSTEM2REGION_SYSTEM2_STATUS;
		stateConfVectorPosition = 4;
	}
	
	/* 'default' enter sequence for region main region */
	private void enterSequence_main_region_default() {
		react_main_region__entry_Default();
	}
	
	/* 'default' enter sequence for region SmartHubRegion */
	private void enterSequence_main_region_SmartHub_SmartHubRegion_default() {
		react_main_region_SmartHub_SmartHubRegion__entry_Default();
	}
	
	/* 'default' enter sequence for region HubStatusRegion */
	private void enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_default() {
		react_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion__entry_Default();
	}
	
	/* 'default' enter sequence for region System1 */
	private void enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_default() {
		react_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1__entry_Default();
	}
	
	/* 'default' enter sequence for region System2 */
	private void enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_default() {
		react_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2__entry_Default();
	}
	
	/* 'default' enter sequence for region PowerConsumptionRegion */
	private void enterSequence_main_region_SmartHub_PowerConsumptionRegion_default() {
		react_main_region_SmartHub_PowerConsumptionRegion__entry_Default();
	}
	
	/* 'default' enter sequence for region System1Region */
	private void enterSequence_main_region_SmartHub_System1Region_default() {
		react_main_region_SmartHub_System1Region__entry_Default();
	}
	
	/* 'default' enter sequence for region System2Region */
	private void enterSequence_main_region_SmartHub_System2Region_default() {
		react_main_region_SmartHub_System2Region__entry_Default();
	}
	
	/* Default exit sequence for state HubOff */
	private void exitSequence_main_region_HubOff() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
	}
	
	/* Default exit sequence for state SmartHub */
	private void exitSequence_main_region_SmartHub() {
		exitSequence_main_region_SmartHub_SmartHubRegion();
		exitSequence_main_region_SmartHub_PowerConsumptionRegion();
		exitSequence_main_region_SmartHub_System1Region();
		exitSequence_main_region_SmartHub_System2Region();
	}
	
	/* Default exit sequence for state AllSystemsOFF */
	private void exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_AllSystemsOFF() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
	}
	
	/* Default exit sequence for state BootUpAllSystems */
	private void exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems() {
		exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1();
		exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2();
	}
	
	/* Default exit sequence for state System1ON */
	private void exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1ON() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
	}
	
	/* Default exit sequence for state System1OFF */
	private void exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1OFF() {
		stateVector[0] = State.$NULLSTATE$;
		stateConfVectorPosition = 0;
	}
	
	/* Default exit sequence for state System2ON */
	private void exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2ON() {
		stateVector[1] = State.$NULLSTATE$;
		stateConfVectorPosition = 1;
	}
	
	/* Default exit sequence for state System2OFF */
	private void exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2OFF() {
		stateVector[1] = State.$NULLSTATE$;
		stateConfVectorPosition = 1;
	}
	
	/* Default exit sequence for state PowerCalculator */
	private void exitSequence_main_region_SmartHub_PowerConsumptionRegion_PowerCalculator() {
		stateVector[2] = State.$NULLSTATE$;
		stateConfVectorPosition = 2;
		
		exitAction_main_region_SmartHub_PowerConsumptionRegion_PowerCalculator();
	}
	
	/* Default exit sequence for state System1_status */
	private void exitSequence_main_region_SmartHub_System1Region_System1_status() {
		stateVector[3] = State.$NULLSTATE$;
		stateConfVectorPosition = 3;
	}
	
	/* Default exit sequence for state System2_status */
	private void exitSequence_main_region_SmartHub_System2Region_System2_status() {
		stateVector[4] = State.$NULLSTATE$;
		stateConfVectorPosition = 4;
	}
	
	/* Default exit sequence for region main region */
	private void exitSequence_main_region() {
		switch (stateVector[0]) {
		case MAIN_REGION_HUBOFF:
			exitSequence_main_region_HubOff();
			break;
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_ALLSYSTEMSOFF:
			exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_AllSystemsOFF();
			break;
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM1_SYSTEM1ON:
			exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1ON();
			break;
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM1_SYSTEM1OFF:
			exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1OFF();
			break;
		default:
			break;
		}
		
		switch (stateVector[1]) {
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2ON:
			exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2ON();
			break;
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2OFF:
			exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2OFF();
			break;
		default:
			break;
		}
		
		switch (stateVector[2]) {
		case MAIN_REGION_SMARTHUB_POWERCONSUMPTIONREGION_POWERCALCULATOR:
			exitSequence_main_region_SmartHub_PowerConsumptionRegion_PowerCalculator();
			break;
		default:
			break;
		}
		
		switch (stateVector[3]) {
		case MAIN_REGION_SMARTHUB_SYSTEM1REGION_SYSTEM1_STATUS:
			exitSequence_main_region_SmartHub_System1Region_System1_status();
			break;
		default:
			break;
		}
		
		switch (stateVector[4]) {
		case MAIN_REGION_SMARTHUB_SYSTEM2REGION_SYSTEM2_STATUS:
			exitSequence_main_region_SmartHub_System2Region_System2_status();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region SmartHubRegion */
	private void exitSequence_main_region_SmartHub_SmartHubRegion() {
		switch (stateVector[0]) {
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_ALLSYSTEMSOFF:
			exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_AllSystemsOFF();
			break;
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM1_SYSTEM1ON:
			exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1ON();
			break;
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM1_SYSTEM1OFF:
			exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1OFF();
			break;
		default:
			break;
		}
		
		switch (stateVector[1]) {
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2ON:
			exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2ON();
			break;
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2OFF:
			exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2OFF();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region System1 */
	private void exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1() {
		switch (stateVector[0]) {
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM1_SYSTEM1ON:
			exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1ON();
			break;
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM1_SYSTEM1OFF:
			exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1OFF();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region System2 */
	private void exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2() {
		switch (stateVector[1]) {
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2ON:
			exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2ON();
			break;
		case MAIN_REGION_SMARTHUB_SMARTHUBREGION_SMARTHUBSYSTEMSTATUS_HUBSTATUSREGION_BOOTUPALLSYSTEMS_SYSTEM2_SYSTEM2OFF:
			exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2OFF();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region PowerConsumptionRegion */
	private void exitSequence_main_region_SmartHub_PowerConsumptionRegion() {
		switch (stateVector[2]) {
		case MAIN_REGION_SMARTHUB_POWERCONSUMPTIONREGION_POWERCALCULATOR:
			exitSequence_main_region_SmartHub_PowerConsumptionRegion_PowerCalculator();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region System1Region */
	private void exitSequence_main_region_SmartHub_System1Region() {
		switch (stateVector[3]) {
		case MAIN_REGION_SMARTHUB_SYSTEM1REGION_SYSTEM1_STATUS:
			exitSequence_main_region_SmartHub_System1Region_System1_status();
			break;
		default:
			break;
		}
	}
	
	/* Default exit sequence for region System2Region */
	private void exitSequence_main_region_SmartHub_System2Region() {
		switch (stateVector[4]) {
		case MAIN_REGION_SMARTHUB_SYSTEM2REGION_SYSTEM2_STATUS:
			exitSequence_main_region_SmartHub_System2Region_System2_status();
			break;
		default:
			break;
		}
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region__entry_Default() {
		enterSequence_main_region_HubOff_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartHub_SmartHubRegion__entry_Default() {
		enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion__entry_Default() {
		enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_AllSystemsOFF_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1__entry_Default() {
		enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1ON_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2__entry_Default() {
		enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2ON_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartHub_PowerConsumptionRegion__entry_Default() {
		enterSequence_main_region_SmartHub_PowerConsumptionRegion_PowerCalculator_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartHub_System1Region__entry_Default() {
		enterSequence_main_region_SmartHub_System1Region_System1_status_default();
	}
	
	/* Default react sequence for initial entry  */
	private void react_main_region_SmartHub_System2Region__entry_Default() {
		enterSequence_main_region_SmartHub_System2Region_System2_status_default();
	}
	
	private long react(long transitioned_before) {
		return transitioned_before;
	}
	
	private long main_region_HubOff_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (toggle) {
				exitSequence_main_region_HubOff();
				enterSequence_main_region_SmartHub_default();
				react(0l);
				
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_SmartHub_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (toggle) {
				exitSequence_main_region_SmartHub();
				enterSequence_main_region_HubOff_default();
				react(0l);
				
				transitioned_after = 4l;
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
		}
		return transitioned_after;
	}
	
	private long main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_AllSystemsOFF_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (hUB.turnONSystems) {
				exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_AllSystemsOFF();
				enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_default();
				main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_react(0l);
				
				transitioned_after = 0l;
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (hUB.turnOFFSystems) {
				exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems();
				enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_AllSystemsOFF_default();
				main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_react(0l);
				
				transitioned_after = 1l;
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1ON_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if (system1.toggle) {
				exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1ON();
				enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1OFF_default();
				transitioned_after = 0l;
			}
		}
		return transitioned_after;
	}
	
	private long main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1OFF_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<0l) {
			if ((system1.toggle || hUB.turnONSystems)) {
				exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1OFF();
				enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System1_System1ON_default();
				transitioned_after = 0l;
			}
		}
		return transitioned_after;
	}
	
	private long main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2ON_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<1l) {
			if (system2.toggle) {
				exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2ON();
				enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2OFF_default();
				main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_react(0l);
				
				transitioned_after = 1l;
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2OFF_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<1l) {
			if ((system2.toggle || hUB.turnONSystems)) {
				exitSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2OFF();
				enterSequence_main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_System2_System2ON_default();
				main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_react(0l);
				
				transitioned_after = 1l;
			}
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_SmartHub_SmartHubRegion_SmartHubSystemStatus_HubStatusRegion_BootUpAllSystems_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	private long main_region_SmartHub_PowerConsumptionRegion_PowerCalculator_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<2l) {
			if (timeEvents[0]) {
				exitSequence_main_region_SmartHub_PowerConsumptionRegion_PowerCalculator();
				timeEvents[0] = false;
				enterSequence_main_region_SmartHub_PowerConsumptionRegion_PowerCalculator_default();
				transitioned_after = 2l;
			}
		}
		return transitioned_after;
	}
	
	private long main_region_SmartHub_System1Region_System1_status_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<3l) {
		}
		return transitioned_after;
	}
	
	private long main_region_SmartHub_System2Region_System2_status_react(long transitioned_before) {
		long transitioned_after = transitioned_before;
		
		if (transitioned_after<4l) {
		}
		/* If no transition was taken then execute local reactions */
		if (transitioned_after==transitioned_before) {
			transitioned_after = main_region_SmartHub_react(transitioned_before);
		}
		return transitioned_after;
	}
	
	/* Can be used by the client code to trigger a run to completion step without raising an event. */
	public synchronized void triggerWithoutEvent() {
		runCycle();
	}
}
